% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_dag.R
\name{check_dag}
\alias{check_dag}
\alias{as.dag}
\title{Check correct model adjustment for identifying causal effects}
\usage{
check_dag(
  ...,
  outcome = NULL,
  exposure = NULL,
  adjusted = NULL,
  latent = NULL,
  effect = c("all", "total", "direct")
)

as.dag(x, ...)
}
\arguments{
\item{...}{One or more formulas, which are converted into \strong{dagitty} syntax.
First element may also be model object. If a model objects is provided, its
formula is used as first formula, and all independent variables will be used
for the \code{adjusted} argument. See 'Details' and 'Examples'.}

\item{outcome}{Name of the dependent variable (outcome), as character string.
Must be a valid name from the formulas. If not set, the first dependent
variable from the formulas is used.}

\item{exposure}{Name of the exposure variable (as character string), for
which the direct and total causal effect on the \code{outcome} should be checked.
Must be a valid name from the formulas. If not set, the first independent
variable from the formulas is used.}

\item{adjusted}{A character vector with names of variables that are adjusted
for in the model. If a model object is provided in \code{...}, any values in
\code{adjusted} will be overwritten by the model's independent variables.}

\item{latent}{A character vector with names of latent variables in the model.}

\item{effect}{Character string, indicating which effect to check. Can be
\code{"all"} (default), \code{"total"}, or \code{"direct"}.}

\item{x}{An object of class \code{check_dag}, as returned by \code{check_dag()}.}
}
\value{
An object of class \code{check_dag}, which can be visualized with \code{plot()}.
The returned object also inherits from class \code{dagitty} and thus can be used
with all functions from the \strong{ggdag} and \strong{dagitty} packages.
}
\description{
\code{check_dag()} checks if a model is correctly adjusted for
identifying causal effects. It returns a \strong{dagitty} object that can be
visualized with \code{plot()}. \code{check_dag()} is a convenient wrapper around
\code{ggdag::dagify()}, which used \code{dagitty::adjustmentSets()} and
\code{dagitty::adjustedNodes()} to check if the model is correctly adjusted for
identifying causal (direct and total) effects of a given exposure on the
outcome. \code{as.dag()} is a small convenient function to return the dagitty-string,
which can be used for the online-tool from the dagitty-website.
}
\details{
The formulas have following syntax:
\itemize{
\item One-directed paths: On the \emph{left-hand-side} is the name of the variables
where causal effects point to (direction of the arrows, in dagitty-language).
On the \emph{right-hand-side} are all variables where causal effects are assumed
to come from. For example, the formula \code{Y ~ X1 + X2}, paths directed from
both \code{X1} and \code{X2} to \code{Y} are assumed.
\item Bi-directed paths: Use \verb{~~} to indicate bi-directed paths. For example,
\code{Y ~~ X} indicates that the path between \code{Y} and \code{X} is bi-directed, and
the arrow points in both directions.
}
}
\examples{
\dontshow{if (require("ggdag", quietly = TRUE) && require("dagitty", quietly = TRUE) && require("see", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# no adjustment needed
check_dag(
  y ~ x + b,
  outcome = "y",
  exposure = "x"
)

# incorrect adjustment
dag <- check_dag(
  y ~ x + b + c,
  x ~ b,
  outcome = "y",
  exposure = "x"
)
dag
plot(dag)

# After adjusting for `b`, the model is correctly specified
dag <- check_dag(
  y ~ x + b + c,
  x ~ b,
  outcome = "y",
  exposure = "x",
  adjusted = "b"
)
dag

# Objects returned by `check_dag()` can be used with "ggdag" or "dagitty"
ggdag::ggdag_status(dag)

# Using a model object to extract information about outcome,
# exposure and adjusted variables
data(mtcars)
m <- lm(mpg ~ wt + gear + disp + cyl, data = mtcars)
dag <- check_dag(
  m,
  wt ~ disp + cyl,
  wt ~ am
)
dag
plot(dag)
\dontshow{\}) # examplesIf}
}
