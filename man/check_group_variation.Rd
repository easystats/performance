% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_group_variation.R
\name{check_group_variation}
\alias{check_group_variation}
\title{Check variables for within- and/or between-group variation}
\usage{
check_group_variation(
  x,
  select = NULL,
  by = NULL,
  nested = FALSE,
  tolerance = 1e-05
)
}
\arguments{
\item{x}{A data frame.}

\item{select}{Character vector (or formula) with names of variables to select
that should be checked.}

\item{by}{Character vector (or formula) with the name of the variable that
indicates the group- or cluster-ID. For cross-classified or nested designs,
\code{by} can also identify two or more variables as group- or cluster-IDs. If
the data is nested and should be treated as such, set \code{nested = TRUE}. Else,
if \code{by} defines two or more variables and \code{nested = FALSE}, a cross-classified
design is assumed.

For nested designs, \code{by} can be:
\itemize{
\item a character vector with the name of the variable that indicates the
levels, ordered from \emph{highest} level to \emph{lowest} (e.g.
\code{by = c("L4", "L3", "L2")}.
\item a character vector with variable names in the format \code{by = "L4/L3/L2"},
where the levels are separated by \code{/}.
}

See also section \emph{De-meaning for cross-classified designs} and
\emph{De-meaning for nested designs} in \code{\link[datawizard:demean]{datawizard::demean()}}.}

\item{nested}{Logical, if \code{TRUE}, the data is treated as nested. If \code{FALSE},
the data is treated as cross-classified. Only applies if \code{by} contains more
than one variable.}
}
\description{
\code{check_group_variation()} checks if variables a within- and/or between-effect,
i.e. if they vary within or between certain groups.
}
\examples{
set.seed(1234)
dat <- data.frame(
  id = rep(letters, each = 3),
  between_num = rep(rnorm(26), each = 3),
  within1_num = rep(rnorm(3), times = 26),
  within2_num = rep(rnorm(3), times = 26),
  both_num = rnorm(3 * 26)
)
check_group_variation(
  dat,
  select = c("between_num", "innen_num", "within_num", "both_num"),
  by = "id"
)
}
